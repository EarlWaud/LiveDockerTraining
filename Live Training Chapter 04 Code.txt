Live Training Chapter 04 Code
------------------------------

docker volume create

docker volume create my-vol-02

docker volume ls

docker volume inspect my-vol-02

docker run -it --privileged --pid=host debian nsenter -t 1 -m -u -n -i sh

ls -altr /var/lib/docker/volumes/my-vol-02

docker volume create my-osx-volume

docker volume inspect my-osx-volume -f "{{json .Mountpoint}}"

sudo ls -l /var/lib/docker/volumes/my-osx-volume

docker run -it --privileged --pid=host debian nsenter -t 1 -m -u -n -i sh

ls -altr /var/lib/docker/volumes/my-osx-volume

dir \\wsl$\docker-desktop-data\version-pack-data\community\docker\volumes


FROM alpine
RUN mkdir /myvol
RUN echo "Data from image" > /myvol/both-places.txt
CMD ["sh"]

docker image build -t volume-demo2:1.0 .

docker container run --rm -d \
--mount source=my-vol-02,target=/myvol \
--name vol-demo2 \
volume-demo2:1.0 tail -f /dev/null

docker container ls

docker volume ls

sudo cat /var/lib/docker/volumes/my-vol-02/_data/both-places.txt

docker container exec -it vol-demo2 /bin/sh
cat /myvol/both-places.txt

echo "important data in a file" > /tmp/data-file.txt

docker container run --rm -d \
-v /tmp/data-file.txt:/myvol/data-file.txt \
--name vol-demo \
volume-demo2:1.0 tail -f /dev/null

docker exec vol-demo cat /myvol/data-file.txt

docker container run --rm -d \
--mount source=my-volume,target=/myvol,readonly \
--name vol-demo1 \
volume-demo:latest tail -f /dev/null

docker container run --rm -d \
--mount source=my-volume,destination=/myvol,readonly \
--name vol-demo4 \
volume-demo:latest tail -f /dev/null

docker container run --rm -d \
-v my-volume:/myvol:ro \
--name vol-demo3 \
volume-demo:latest tail -f /dev/null

docker container ps -a --filter volume=my-volume

docker container stop $(docker container ls -q)

docker volume ls

docker volume rm my-vol-02

docker volume ls

docker volume prune

docker volume ls

docker container run \
--rm -d \
-v data-vol-01:/data/vol1 -v data-vol-02:/data/vol2 \
--name data-container \
vol-demo2:1.0 tail -f /dev/null

docker container run \
--rm -d \
--volumes-from data-container \
--name app-container \
vol-demo2:1.0 tail -f /dev/null

docker container exec app-container ls -l /data

docker container inspect -f '{{ range .Mounts }}{{ .Name }} {{ end }}' app-container


